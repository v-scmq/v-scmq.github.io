{"version":3,"sources":["webpack:///./src/renderer/views/LocalMusic.vue?2cf8","webpack:///./src/renderer/views/LocalMusic.vue?e7ee","webpack:///./src/renderer/views/LocalMusic.vue"],"names":["_hoisted_1","class","style","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","render","_ctx","_cache","$props","$setup","$data","$options","_component_Button","_component_popover","_component_text_field","_component_table_view","text","prefixIcon","prefixIconSize","onClick","playSelect","closeable","content","default","_","multiple","onMultiple","modelValue","inputKey","$event","placeholder","onInput","handleMusicFilter","onImportButtonClicked","type","ref","accept","onChange","args","addMusic","columns","data","list","onRowDblclick","playMediaList","name","width","title","property","fileChooser","maxSize","parse","basePath","file","meta","path","common","singer","artist","year","album","cover","duration","format","size","bitrate","sampleRate","info","electron","electronApi","window","isDirectory","exists","rmDir","buffer","picture","length","writeFile","filter","item","value","includes","Message","message","showClose","clearTimeout","$timer","$method","limited","Spinner","open","table","localMusic","promise","queryOfFilter","queryAll","then","splice","finally","close","setTimeout","async","files","event","target","savedList","getAppPath","mkDirs","out","parseFile","push","insert","column","inputElement","click","__exports__"],"mappings":"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","file":"public/js/chunk-2d225467.f470331c.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"v-row\",\n  style: {\"margin\":\"0 8px 12px 0\",\"gap\":\"8px\",\"flex-wrap\":\"wrap\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_popover = _resolveComponent(\"popover\")!\n  const _component_text_field = _resolveComponent(\"text-field\")!\n  const _component_table_view = _resolveComponent(\"table-view\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_Button, {\n        text: \"播放全部\",\n        prefixIcon: \"play-select\",\n        prefixIconSize: \"1.5em\",\n        onClick: _ctx.playSelect\n      }, null, 8, [\"onClick\"]),\n      _createVNode(_component_popover, { closeable: \"\" }, {\n        content: _withCtx(() => [\n          _hoisted_2,\n          _hoisted_3,\n          _hoisted_4,\n          _hoisted_5,\n          _hoisted_6,\n          _hoisted_7,\n          _hoisted_8,\n          _hoisted_9,\n          _hoisted_10,\n          _hoisted_11,\n          _hoisted_12,\n          _hoisted_13\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_Button, {\n            text: \"添加到\",\n            prefixIcon: \"plus\",\n            prefixIconSize: \"1.5em\"\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_Button, {\n        text: \"下载\",\n        prefixIcon: \"my-download\",\n        prefixIconSize: \"1.5em\"\n      }),\n      _createVNode(_component_Button, {\n        text: \"删除\",\n        prefixIcon: \"trash\",\n        prefixIconSize: \"1.5em\"\n      }),\n      _createVNode(_component_Button, {\n        text: _ctx.multiple ? '退出批量操作':'批量操作',\n        prefixIcon: \"multiple\",\n        prefixIconSize: \"1.5em\",\n        onClick: _ctx.onMultiple\n      }, null, 8, [\"text\", \"onClick\"]),\n      _createVNode(_component_text_field, {\n        modelValue: _ctx.inputKey,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.inputKey) = $event)),\n        placeholder: \"搜索本地歌曲\",\n        onInput: _ctx.handleMusicFilter,\n        style: {\"margin\":\"0 0 0 auto\"}\n      }, null, 8, [\"modelValue\", \"onInput\"]),\n      _createVNode(_component_Button, {\n        text: \"导入歌曲\",\n        onClick: _ctx.onImportButtonClicked,\n        prefixIcon: \"import\",\n        prefixIconSize: \"1.5em\"\n      }, null, 8, [\"onClick\"]),\n      _createElementVNode(\"input\", {\n        type: \"file\",\n        style: {\"display\":\"none\"},\n        ref: \"fileChooser\",\n        multiple: \"\",\n        accept: \"audio/*\",\n        onChange: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.addMusic && _ctx.addMusic(...args)))\n      }, null, 544),\n      _createVNode(_component_Button, {\n        text: \"排序方式\",\n        prefixIcon: \"sort\",\n        prefixIconSize: \"1.2em\"\n      })\n    ]),\n    _createVNode(_component_table_view, {\n      columns: _ctx.columns,\n      data: _ctx.list,\n      style: {\"flex\":\"auto\"},\n      onRowDblclick: _ctx.playMediaList\n    }, null, 8, [\"columns\", \"data\", \"onRowDblclick\"])\n  ], 64))\n}","\r\nimport {db, tables} from '../database';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport {playMediaList} from '../player/hooks';\r\n\r\nimport {reactive, ref, onBeforeUnmount, defineComponent} from 'vue';\r\nimport {getFileURL, secondToString, resolveFileName, getMediaInfo, toFileSize} from '../../utils';\r\nimport {TableColumn} from '../components/types';\r\nimport {Song} from '../../types';\r\n\r\nexport default defineComponent({\r\n  name: 'LocalMusic',\r\n\r\n  setup() {\r\n    const inputKey = ref('');\r\n    const multiple = ref(false);\r\n    const list = reactive<Song[]>([]);\r\n\r\n    const columns = reactive<TableColumn[]>([\r\n      {type: 'index', width: '100px'},\r\n      {title: '歌曲', property: 'title'},\r\n      {title: '歌手', property: 'singer'},\r\n      {title: '专辑', property: 'album'},\r\n      {title: '时长', property: 'duration', width: '100px'},\r\n      {title: '大小', property: 'size', width: '100px'}\r\n    ]);\r\n\r\n    const fileChooser = ref(null as unknown as HTMLInputElement);\r\n\r\n    // 用于在indexDB中存储本地音乐信息的数据量(非响应式)\r\n    let maxSize = 0;\r\n\r\n    /**\r\n     * 通过文件对象生成音乐信息\r\n     *\r\n     * @param basePath 存储音频专辑封面图的根路径\r\n     * @param file 文件对象\r\n     * @param meta 音频元数据信息\r\n     * @returns {Song} 音乐信息对象\r\n     */\r\n    const parse = (basePath: string, file: File, meta: any) => {\r\n      let data: Song = {\r\n        path: getFileURL(file.path),\r\n        title: meta.common.title,\r\n        singer: meta.common.artist,\r\n        // singerList: meta.common.artists,\r\n        year: meta.common.year,\r\n        album: meta.common.album,\r\n        cover: '',\r\n        duration: secondToString(meta.format.duration),\r\n        size: toFileSize(2, file.size),\r\n        bitrate: meta.format.bitrate,\r\n        sampleRate: meta.format.sampleRate\r\n        // codec: meta.format.codec, // 'MPEG 1 Layer 3'\r\n        // codecProfile: meta.format.codecProfile,\r\n        // container: meta.format.container,\r\n        // lossless: false,\r\n        // numberOfChannels: meta.format.numberOfChannels,\r\n      } as any;\r\n\r\n      if (!data.title || !data.singer) {\r\n        let info = getMediaInfo(file, true);\r\n        data.title = info.title || '未知';\r\n        data.singer = info.singer || '未知';\r\n      }\r\n\r\n      const {electron: electronApi} = window as any;\r\n\r\n      const name = data.album as string || file.name;\r\n      const path = `${basePath}/${resolveFileName(name)}`;\r\n      // 注意必须先检测存在才能判断是文件还是目录,否则抛出异常\r\n      let exists = electronApi.exists(path), isDirectory;\r\n\r\n      // 若文件路径不存在,或者是目录\r\n      if (!exists || (isDirectory = electronApi.isDirectory(path))) {\r\n        // 是目录则强制删除目录\r\n        isDirectory && electronApi.rmDir(path);\r\n\r\n        let buffer = meta.common.picture;\r\n        if ((buffer = buffer && buffer.length ? buffer[0].data : null)) {\r\n          electronApi.writeFile(path, buffer);\r\n          (data as any).cover = getFileURL(path);\r\n        }\r\n\r\n      } else {\r\n        // 替换路径为本地服务器地址\r\n        (data as any).cover = getFileURL(path);\r\n      }\r\n      meta = meta.common = meta.format = null;\r\n      return data;\r\n    };\r\n\r\n    /**\r\n     * @param item 数据库表单条记录\r\n     * @return {boolean} true:保留或false:放弃\r\n     */\r\n    const filter = (item: { [key: string]: any }) => {\r\n      const value = inputKey.value, {title = '', album = '', singer = ''} = item;\r\n      return title.includes(value) || album.includes(value) || singer.includes(value);\r\n    };\r\n\r\n    const playSelect = () => Message({message: '播放所选音乐', showClose: true, type: 'success'});\r\n\r\n    /** 开始执行本地歌曲模糊搜索(使用事件防抖原理,避免频繁调用过滤逻辑) */\r\n    const handleMusicFilter: any = () => {\r\n      // 若计时器存在,清除计时器,取消上次行的任务\r\n      clearTimeout(handleMusicFilter.$timer);\r\n\r\n      // 若还未初始化过处理方法,则先初始化\r\n      if (!handleMusicFilter.$method) {\r\n        handleMusicFilter.$method = () => {\r\n          const limited = maxSize > 1024;\r\n          limited && Spinner.open();\r\n\r\n          const table = tables.localMusic;\r\n          // 若输入了搜索关键词,则调用过滤,否则查询所有\r\n          const promise = inputKey.value ? db.queryOfFilter(table, filter) : db.queryAll(table);\r\n\r\n          promise.then(data => {\r\n            inputKey.value && (maxSize = data.length);\r\n            list.splice(0, list.length, ...data);\r\n          });\r\n          promise.finally(limited ? Spinner.close : null);\r\n        }\r\n      }\r\n      // 开始计时,在指定时间后执行数据过滤\r\n      handleMusicFilter.$timer = setTimeout(handleMusicFilter.$method, 500);\r\n    };\r\n\r\n    /** 导入音乐信息 */\r\n    const addMusic = async (event: Event) => {\r\n      let files = (event.target as HTMLInputElement).files;\r\n      if (!files || files.length === 0) {\r\n        return;\r\n      }\r\n\r\n      Spinner.open();\r\n      let savedList: Song[] = [];\r\n\r\n      const {electron: electronApi} = window as any;\r\n\r\n      if (electronApi) {\r\n        // 获取应用程序运行时进程所在的根路径\r\n        let path = await electronApi.getAppPath();\r\n\r\n        path = `${path}/picture/album`;\r\n        if (!electronApi.exists(path)) {\r\n          electronApi.mkDirs(path);\r\n        }\r\n\r\n        out: for (let file of files) {\r\n          for (let item of list) {\r\n            if (file.path === item.path) {\r\n              continue out; // 若有相同的path则跳过\r\n            }\r\n          }\r\n\r\n          let meta = await electronApi.parseFile(file.path);\r\n          savedList.push(parse(path, file, meta));\r\n        }\r\n\r\n      } else {\r\n        for (let file of files) {\r\n          // 若是外部环境,只能使用URL类创建临时的文件访问地址\r\n          savedList.push(getMediaInfo(file, false) as Song);\r\n        }\r\n      }\r\n\r\n      if (savedList.length) {\r\n        list.push(...savedList);\r\n        await db.insert(tables.localMusic, savedList);\r\n        maxSize += savedList.length;\r\n      }\r\n\r\n      Spinner.close();\r\n    };\r\n\r\n    onBeforeUnmount(() => db.close());\r\n\r\n    /************ 加载表格视图数据 START ************/\r\n    Spinner.open();\r\n    db.open()\r\n        .then(() => db.queryAll(tables.localMusic))\r\n        .then(data => maxSize = list.push(...data))\r\n        .finally(Spinner.close);\r\n    /************ 加载表格视图数据   END ************/\r\n\r\n    return {\r\n      columns, list, multiple, inputKey, fileChooser,\r\n      playSelect, handleMusicFilter, playMediaList, addMusic,\r\n\r\n      /** 开始或结束批量操作 */\r\n      onMultiple: () => {\r\n        const column = columns[0];\r\n        column.type = column.type === 'index' ? 'checkbox' : 'index';\r\n        multiple.value = !multiple.value;\r\n      },\r\n\r\n      /** 导入歌曲按钮被点击时,弹出文件选择框 */\r\n      onImportButtonClicked: () => {\r\n        const inputElement = fileChooser.value;\r\n        // 清除文件选择器(input元素)的值,解决重新选择不能回调change事件的问题\r\n        inputElement.value = null as any;\r\n        inputElement.click();\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n});\r\n","import { render } from \"./LocalMusic.vue?vue&type=template&id=1d526f30&ts=true\"\nimport script from \"./LocalMusic.vue?vue&type=script&lang=ts\"\nexport * from \"./LocalMusic.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\SCMQ\\\\Project\\\\mq-player-vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}