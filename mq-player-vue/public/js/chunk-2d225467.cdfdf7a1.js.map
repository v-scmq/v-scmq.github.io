{"version":3,"sources":["webpack:///./src/renderer/views/LocalMusic.vue?a260","webpack:///./src/renderer/views/LocalMusic.vue?e7ee","webpack:///./src/renderer/views/LocalMusic.vue"],"names":["_hoisted_1","class","style","_hoisted_2","_createTextVNode","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","render","_ctx","_cache","$props","$setup","$data","$options","_component_hl_button","_resolveComponent","_component_popover","_component_text_field","_component_table_view","_openBlock","_createElementBlock","_Fragment","_createVNode","icon","onClick","playSelect","default","_withCtx","_","closeable","content","$event","multiple","_toDisplayString","modelValue","inputKey","placeholder","onInput","handleMusicFilter","onImportButtonClicked","type","ref","accept","onChange","args","addMusic","columns","data","list","selection","onRowDblclick","playMediaList","defineComponent","name","setup","reactive","width","title","property","fileChooser","maxSize","parse","basePath","file","meta","path","getFileURL","common","singer","artist","year","album","cover","duration","secondToString","format","size","toFileSize","bitrate","sampleRate","info","getMediaInfo","electron","electronApi","window","resolveFileName","isDirectory","exists","rmDir","buffer","picture","length","writeFile","filter","item","value","includes","Message","message","showClose","clearTimeout","$timer","$method","limited","Spinner","open","table","tables","localMusic","promise","db","queryOfFilter","queryAll","then","splice","finally","close","setTimeout","async","files","event","target","savedList","getAppPath","mkDirs","out","parseFile","push","insert","onBeforeUnmount","inputElement","click","__exports__"],"mappings":"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","file":"public/js/chunk-2d225467.cdfdf7a1.js","sourcesContent":["import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"v-row\",\n  style: {\"margin\":\"0 8px 12px 0\",\"gap\":\"8px\",\"flex-wrap\":\"wrap\",\"--button-icon-size\":\"1.5em\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"播放全部\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"添加到\")\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item separator first\" }, \"我的收藏\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"dropdown-item last\" }, \"添加到新歌单\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createTextVNode(\"下载\")\nconst _hoisted_17 = /*#__PURE__*/_createTextVNode(\"删除\")\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\"导入歌曲\")\nconst _hoisted_19 = /*#__PURE__*/_createTextVNode(\"排序方式\")\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_hl_button = _resolveComponent(\"hl-button\")!\n  const _component_popover = _resolveComponent(\"popover\")!\n  const _component_text_field = _resolveComponent(\"text-field\")!\n  const _component_table_view = _resolveComponent(\"table-view\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_hl_button, {\n        icon: \"play-select\",\n        onClick: _ctx.playSelect\n      }, {\n        default: _withCtx(() => [\n          _hoisted_2\n        ]),\n        _: 1\n      }, 8, [\"onClick\"]),\n      _createVNode(_component_popover, { closeable: \"\" }, {\n        content: _withCtx(() => [\n          _hoisted_4,\n          _hoisted_5,\n          _hoisted_6,\n          _hoisted_7,\n          _hoisted_8,\n          _hoisted_9,\n          _hoisted_10,\n          _hoisted_11,\n          _hoisted_12,\n          _hoisted_13,\n          _hoisted_14,\n          _hoisted_15\n        ]),\n        default: _withCtx(() => [\n          _createVNode(_component_hl_button, { icon: \"plus\" }, {\n            default: _withCtx(() => [\n              _hoisted_3\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_hl_button, { icon: \"my-download\" }, {\n        default: _withCtx(() => [\n          _hoisted_16\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_hl_button, {\n        icon: \"trash\",\n        \"icon-size\": \"1.5em\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_17\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_hl_button, {\n        icon: \"multiple\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.multiple = !_ctx.multiple))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(_ctx.multiple ? '退出批量操作' : '批量操作'), 1)\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_text_field, {\n        modelValue: _ctx.inputKey,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.inputKey) = $event)),\n        placeholder: \"搜索本地歌曲\",\n        onInput: _ctx.handleMusicFilter,\n        style: {\"margin\":\"0 0 0 auto\"}\n      }, null, 8, [\"modelValue\", \"onInput\"]),\n      _createVNode(_component_hl_button, {\n        icon: \"import\",\n        onClick: _ctx.onImportButtonClicked\n      }, {\n        default: _withCtx(() => [\n          _hoisted_18\n        ]),\n        _: 1\n      }, 8, [\"onClick\"]),\n      _createElementVNode(\"input\", {\n        type: \"file\",\n        style: {\"display\":\"none\"},\n        ref: \"fileChooser\",\n        multiple: \"\",\n        accept: \"audio/*\",\n        onChange: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.addMusic && _ctx.addMusic(...args)))\n      }, null, 544),\n      _createVNode(_component_hl_button, {\n        icon: \"sort\",\n        style: {\"--button-icon-size\":\"1.2em\"}\n      }, {\n        default: _withCtx(() => [\n          _hoisted_19\n        ]),\n        _: 1\n      })\n    ]),\n    _createVNode(_component_table_view, {\n      style: {\"flex\":\"auto\"},\n      columns: _ctx.columns,\n      data: _ctx.list,\n      selection: _ctx.multiple,\n      onRowDblclick: _ctx.playMediaList\n    }, null, 8, [\"columns\", \"data\", \"selection\", \"onRowDblclick\"])\n  ], 64))\n}","\r\nimport {db, tables} from '../database';\r\nimport Message from '../components/Message';\r\nimport Spinner from '../components/Spinner';\r\nimport {playMediaList} from '../player/hooks';\r\n\r\nimport {reactive, ref, onBeforeUnmount, defineComponent} from 'vue';\r\nimport {getFileURL, secondToString, resolveFileName, getMediaInfo, toFileSize} from '../../utils';\r\nimport {TableColumn} from '../components/types';\r\nimport {Song} from '../../types';\r\n\r\nexport default defineComponent({\r\n  name: 'LocalMusic',\r\n\r\n  setup() {\r\n    const inputKey = ref('');\r\n    const multiple = ref(false);\r\n    const list = reactive<Song[]>([]);\r\n\r\n    const columns: TableColumn[] = [\r\n      {type: 'index', width: '100px'},\r\n      {title: '歌曲', property: 'title'},\r\n      {title: '歌手', property: 'singer'},\r\n      {title: '专辑', property: 'album'},\r\n      {title: '时长', property: 'duration', width: '100px'},\r\n      {title: '大小', property: 'size', width: '100px'}\r\n    ];\r\n\r\n    const fileChooser = ref(null as unknown as HTMLInputElement);\r\n\r\n    // 用于在indexDB中存储本地音乐信息的数据量(非响应式)\r\n    let maxSize = 0;\r\n\r\n    /**\r\n     * 通过文件对象生成音乐信息\r\n     *\r\n     * @param basePath 存储音频专辑封面图的根路径\r\n     * @param file 文件对象\r\n     * @param meta 音频元数据信息\r\n     * @returns {Song} 音乐信息对象\r\n     */\r\n    const parse = (basePath: string, file: File, meta: any) => {\r\n      let data: Song = {\r\n        path: getFileURL(file.path),\r\n        title: meta.common.title,\r\n        singer: meta.common.artist,\r\n        // singerList: meta.common.artists,\r\n        year: meta.common.year,\r\n        album: meta.common.album,\r\n        cover: '',\r\n        duration: secondToString(meta.format.duration),\r\n        size: toFileSize(2, file.size),\r\n        bitrate: meta.format.bitrate,\r\n        sampleRate: meta.format.sampleRate\r\n        // codec: meta.format.codec, // 'MPEG 1 Layer 3'\r\n        // codecProfile: meta.format.codecProfile,\r\n        // container: meta.format.container,\r\n        // lossless: false,\r\n        // numberOfChannels: meta.format.numberOfChannels,\r\n      } as any;\r\n\r\n      if (!data.title || !data.singer) {\r\n        let info = getMediaInfo(file, true);\r\n        data.title = info.title || '未知';\r\n        data.singer = info.singer || '未知';\r\n      }\r\n\r\n      const {electron: electronApi} = window as any;\r\n\r\n      const name = data.album as string || file.name;\r\n      const path = `${basePath}/${resolveFileName(name)}`;\r\n      // 注意必须先检测存在才能判断是文件还是目录,否则抛出异常\r\n      let exists = electronApi.exists(path), isDirectory;\r\n\r\n      // 若文件路径不存在,或者是目录\r\n      if (!exists || (isDirectory = electronApi.isDirectory(path))) {\r\n        // 是目录则强制删除目录\r\n        isDirectory && electronApi.rmDir(path);\r\n\r\n        let buffer = meta.common.picture;\r\n        if ((buffer = buffer && buffer.length ? buffer[0].data : null)) {\r\n          electronApi.writeFile(path, buffer);\r\n          (data as any).cover = getFileURL(path);\r\n        }\r\n\r\n      } else {\r\n        // 替换路径为本地服务器地址\r\n        (data as any).cover = getFileURL(path);\r\n      }\r\n      meta = meta.common = meta.format = null;\r\n      return data;\r\n    };\r\n\r\n    /**\r\n     * @param item 数据库表单条记录\r\n     * @return {boolean} true:保留或false:放弃\r\n     */\r\n    const filter = (item: { [key: string]: any }) => {\r\n      const value = inputKey.value, {title = '', album = '', singer = ''} = item;\r\n      return title.includes(value) || album.includes(value) || singer.includes(value);\r\n    };\r\n\r\n    const playSelect = () => Message({message: '播放所选音乐', showClose: true, type: 'success'});\r\n\r\n    /** 开始执行本地歌曲模糊搜索(使用事件防抖原理,避免频繁调用过滤逻辑) */\r\n    const handleMusicFilter: any = () => {\r\n      // 若计时器存在,清除计时器,取消上次行的任务\r\n      clearTimeout(handleMusicFilter.$timer);\r\n\r\n      // 若还未初始化过处理方法,则先初始化\r\n      if (!handleMusicFilter.$method) {\r\n        handleMusicFilter.$method = () => {\r\n          const limited = maxSize > 1024;\r\n          limited && Spinner.open();\r\n\r\n          const table = tables.localMusic;\r\n          // 若输入了搜索关键词,则调用过滤,否则查询所有\r\n          const promise = inputKey.value ? db.queryOfFilter(table, filter) : db.queryAll(table);\r\n\r\n          promise.then(data => {\r\n            inputKey.value && (maxSize = data.length);\r\n            list.splice(0, list.length, ...data);\r\n          });\r\n          promise.finally(limited ? Spinner.close : null);\r\n        }\r\n      }\r\n      // 开始计时,在指定时间后执行数据过滤\r\n      handleMusicFilter.$timer = setTimeout(handleMusicFilter.$method, 500);\r\n    };\r\n\r\n    /** 导入音乐信息 */\r\n    const addMusic = async (event: Event) => {\r\n      let files = (event.target as HTMLInputElement).files;\r\n      if (!files || files.length === 0) {\r\n        return;\r\n      }\r\n\r\n      Spinner.open();\r\n      let savedList: Song[] = [];\r\n\r\n      const {electron: electronApi} = window as any;\r\n\r\n      if (electronApi) {\r\n        // 获取应用程序运行时进程所在的根路径\r\n        let path = await electronApi.getAppPath();\r\n\r\n        path = `${path}/picture/album`;\r\n        if (!electronApi.exists(path)) {\r\n          electronApi.mkDirs(path);\r\n        }\r\n\r\n        out: for (let file of files) {\r\n          for (let item of list) {\r\n            if (file.path === item.path) {\r\n              continue out; // 若有相同的path则跳过\r\n            }\r\n          }\r\n\r\n          let meta = await electronApi.parseFile(file.path);\r\n          savedList.push(parse(path, file, meta));\r\n        }\r\n\r\n      } else {\r\n        for (let file of files) {\r\n          // 若是外部环境,只能使用URL类创建临时的文件访问地址\r\n          savedList.push(getMediaInfo(file, false) as Song);\r\n        }\r\n      }\r\n\r\n      if (savedList.length) {\r\n        list.push(...savedList);\r\n        await db.insert(tables.localMusic, savedList);\r\n        maxSize += savedList.length;\r\n      }\r\n\r\n      Spinner.close();\r\n    };\r\n\r\n    onBeforeUnmount(() => db.close());\r\n\r\n    /************ 加载表格视图数据 START ************/\r\n    Spinner.open();\r\n    db.open()\r\n        .then(() => db.queryAll(tables.localMusic))\r\n        .then(data => maxSize = list.push(...data))\r\n        .finally(Spinner.close);\r\n    /************ 加载表格视图数据   END ************/\r\n\r\n    return {\r\n      columns, list, multiple, inputKey, fileChooser,\r\n      playSelect, handleMusicFilter, playMediaList, addMusic,\r\n\r\n      /** 导入歌曲按钮被点击时,弹出文件选择框 */\r\n      onImportButtonClicked: () => {\r\n        const inputElement = fileChooser.value;\r\n        // 清除文件选择器(input元素)的值,解决重新选择不能回调change事件的问题\r\n        inputElement.value = null as any;\r\n        inputElement.click();\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n});\r\n","import { render } from \"./LocalMusic.vue?vue&type=template&id=2cf9db99&ts=true\"\nimport script from \"./LocalMusic.vue?vue&type=script&lang=ts\"\nexport * from \"./LocalMusic.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\SCMQ\\\\project\\\\HTML\\\\mq-player-vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}