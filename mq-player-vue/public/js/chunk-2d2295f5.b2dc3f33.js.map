{"version":3,"sources":["webpack:///./src/renderer/views/NetSearchView.vue?d8de","webpack:///./src/renderer/views/NetSearchView.vue?23fd","webpack:///./src/renderer/views/NetSearchView.vue"],"names":["_hoisted_1","key","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","style","_hoisted_9","_createTextVNode","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","render","_ctx","_cache","$props","$setup","$data","$options","_component_image_view","_resolveComponent","_component_hl_button","_component_icon","_component_table_view","_component_grid_view","_component_tab_pane","_openBlock","_createElementBlock","_Fragment","singer","_createVNode","modelValue","cover","$event","defaultValue","_createElementVNode","_toDisplayString","name","songCount","albumCount","mvCount","fansCount","icon","default","_withCtx","_","onClick","multiple","_createCommentVNode","tabs","activeTabName","onTabChange","handleTabChanged","song","selection","columns","data","songList","onRowDblclick","playMediaList","onInfiniteScroll","loadDataList","title","item","vip","_createBlock","width","height","vid","singers","_renderList","index","mid","album","albumList","loadAlbumData","onCellClick","onAlbumItemClicked","mv","mvList","loadMvData","special","specialList","loadSpecialData","defineComponent","props","query","type","Object","required","setup","reactive","MV_TAB","update","page","current","size","SONG_TAB","ALBUM_TAB","SPECIAL_TAB","ref","property","flex","router","useRouter","$query","newTab","value","Spinner","open","searchSinger","then","singerInfo","list","assign","searchSong","splice","length","catch","finally","close","searchAlbum","searchMv","searchSpecial","watch","newQuery","forEach","tab","total","pageCount","immediate","event","node","target","classList","contains","parentNode","getAttribute","Number","push","path","__exports__"],"mappings":"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","file":"public/js/chunk-2d2295f5.b2dc3f33.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"v-row data-container\"\n}\nconst _hoisted_2 = { class: \"v-column\" }\nconst _hoisted_3 = { class: \"v-row data-statistic\" }\nconst _hoisted_4 = { class: \"statistic-item\" }\nconst _hoisted_5 = { class: \"statistic-item\" }\nconst _hoisted_6 = { class: \"statistic-item\" }\nconst _hoisted_7 = { class: \"statistic-item\" }\nconst _hoisted_8 = {\n  class: \"v-row\",\n  style: {\"--button-icon-size\":\"1.5em\"}\n}\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"播放全部\")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"添加到\")\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"下载\")\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"删除\")\nconst _hoisted_13 = { class: \"cell-text\" }\nconst _hoisted_14 = [\"data-mid\"]\nconst _hoisted_15 = [\"data-mid\"]\nconst _hoisted_16 = { class: \"name\" }\nconst _hoisted_17 = [\"data-mid\"]\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\" -\")\nconst _hoisted_19 = { class: \"name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_image_view = _resolveComponent(\"image-view\")!\n  const _component_hl_button = _resolveComponent(\"hl-button\")!\n  const _component_icon = _resolveComponent(\"icon\")!\n  const _component_table_view = _resolveComponent(\"table-view\")!\n  const _component_grid_view = _resolveComponent(\"grid-view\")!\n  const _component_tab_pane = _resolveComponent(\"tab-pane\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (_ctx.singer)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createVNode(_component_image_view, {\n            modelValue: _ctx.singer.cover,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.singer.cover) = $event)),\n            defaultValue: \"icon/singer.png\"\n          }, null, 8, [\"modelValue\"]),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"div\", null, _toDisplayString(_ctx.singer.name || '-'), 1),\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"span\", _hoisted_4, \"单曲：\" + _toDisplayString(_ctx.singer.songCount || '-'), 1),\n              _createElementVNode(\"span\", _hoisted_5, \"专辑：\" + _toDisplayString(_ctx.singer.albumCount || '-'), 1),\n              _createElementVNode(\"span\", _hoisted_6, \"MV：\" + _toDisplayString(_ctx.singer.mvCount || '-'), 1),\n              _createElementVNode(\"span\", _hoisted_7, \"粉丝：\" + _toDisplayString(_ctx.singer.fansCount || '-'), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createVNode(_component_hl_button, { icon: \"play-select\" }, {\n                default: _withCtx(() => [\n                  _hoisted_9\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_hl_button, { icon: \"plus\" }, {\n                default: _withCtx(() => [\n                  _hoisted_10\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_hl_button, { icon: \"my-download\" }, {\n                default: _withCtx(() => [\n                  _hoisted_11\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_hl_button, { icon: \"trash\" }, {\n                default: _withCtx(() => [\n                  _hoisted_12\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_hl_button, {\n                icon: \"multiple\",\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.multiple = !_ctx.multiple))\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.multiple ? '退出批量操作' : '批量操作'), 1)\n                ]),\n                _: 1\n              })\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createVNode(_component_tab_pane, {\n      tabs: _ctx.tabs,\n      activeTabName: _ctx.activeTabName,\n      onTabChange: _ctx.handleTabChanged\n    }, {\n      song: _withCtx(() => [\n        _createVNode(_component_table_view, {\n          style: {\"flex\":\"auto\"},\n          selection: _ctx.multiple,\n          columns: _ctx.columns,\n          data: _ctx.songList,\n          onRowDblclick: _ctx.playMediaList,\n          onInfiniteScroll: _ctx.loadDataList\n        }, {\n          title: _withCtx(({item}) => [\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.title), 1),\n            (item.vip)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 0,\n                  class: \"vip-icon\",\n                  name: \"vip\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true),\n            (item.vid)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 1,\n                  class: \"mv-icon\",\n                  name: \"mv\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          singer: _withCtx(({item:{singer:singers = []}}) => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(singers, (singer, index) => {\n              return (_openBlock(), _createElementBlock(\"span\", {\n                class: \"link cell-text\",\n                key: index,\n                \"data-mid\": singer.mid\n              }, _toDisplayString(singer.name), 9, _hoisted_14))\n            }), 128))\n          ]),\n          album: _withCtx(({item:{album}}) => [\n            album\n              ? (_openBlock(), _createElementBlock(\"span\", {\n                  key: 0,\n                  class: \"link cell-text\",\n                  \"data-mid\": album.mid\n                }, _toDisplayString(album.name), 9, _hoisted_15))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }, 8, [\"selection\", \"columns\", \"data\", \"onRowDblclick\", \"onInfiniteScroll\"])\n      ]),\n      album: _withCtx(() => [\n        _createVNode(_component_grid_view, {\n          \"cell-widths\": \"repeat(auto-fit, 13em)\",\n          data: _ctx.albumList,\n          \"cell-height\": 234,\n          onInfiniteScroll: _ctx.loadAlbumData,\n          onCellClick: _ctx.onAlbumItemClicked\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/album.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", _hoisted_16, _toDisplayString(item.name), 1)\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\", \"onCellClick\"])\n      ]),\n      mv: _withCtx(() => [\n        _createVNode(_component_grid_view, {\n          class: \"arc-rect\",\n          \"cell-widths\": \"repeat(auto-fit, 16em)\",\n          data: _ctx.mvList,\n          \"cell-height\": 206,\n          onInfiniteScroll: _ctx.loadMvData\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/mv.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.singer, (singer, index) => {\n                return (_openBlock(), _createElementBlock(\"span\", {\n                  class: \"link\",\n                  key: index,\n                  \"data-mid\": singer.mid\n                }, _toDisplayString(singer.name), 9, _hoisted_17))\n              }), 128)),\n              _hoisted_18,\n              _createElementVNode(\"span\", null, _toDisplayString(item.title), 1)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\"])\n      ]),\n      special: _withCtx(() => [\n        _createVNode(_component_grid_view, {\n          style: {\"margin-top\":\"1em\"},\n          \"cell-widths\": \"repeat(auto-fit, 13em)\",\n          \"cell-height\": 234,\n          data: _ctx.specialList,\n          onInfiniteScroll: _ctx.loadSpecialData\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/special.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", _hoisted_19, _toDisplayString(item.name), 1)\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\"])\n      ]),\n      _: 1\n    }, 8, [\"tabs\", \"activeTabName\", \"onTabChange\"])\n  ], 64))\n}","\r\nimport {playMediaList} from '../player/hooks';\r\nimport Spinner from '../components/Spinner';\r\n\r\nimport {TableColumn} from '../components/types';\r\nimport {Album, Mv, Singer, Song, ComputedPage, Special} from '../../types';\r\nimport {searchAlbum, searchMv, searchSinger, searchSong, searchSpecial} from '../api';\r\n\r\nimport {PropType, reactive, watch, defineComponent, ref} from 'vue';\r\nimport {useRouter} from 'vue-router';\r\n\r\ntype TabName = 'song' | 'album' | 'mv' | 'special';\r\n\r\n/**\r\n * 选项卡信息\r\n */\r\ntype Tab = {\r\n  /** 选项卡标题 */\r\n  title: string;\r\n  name: TabName;\r\n  /** 数据是否需要更新 */\r\n  update: boolean;\r\n  /** 选项卡对应的视图是分页信息 */\r\n  page: ComputedPage;\r\n};\r\n\r\nexport default defineComponent({\r\n  name: 'NetSearchView',\r\n\r\n  props: {\r\n    query: {type: Object as PropType<{ value: string }>, required: true}\r\n  },\r\n\r\n  setup(props) {\r\n    const singer = reactive<Singer>({});\r\n    const songList = reactive<Song[]>([]);\r\n    const mvList = reactive<Mv[]>([]);\r\n    const albumList = reactive<Album[]>([]);\r\n    const specialList = reactive<Special[]>([]);\r\n\r\n    const MV_TAB = {title: 'MV', name: 'mv', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const SONG_TAB = {title: '歌曲', name: 'song', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const ALBUM_TAB = {title: '专辑', name: 'album', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const SPECIAL_TAB = {title: '歌单', name: 'special', update: true, page: {current: 1, size: 30}} as Tab;\r\n\r\n    const tabs = [SONG_TAB, ALBUM_TAB, MV_TAB, SPECIAL_TAB];\r\n    const activeTabName = ref<TabName>('song');\r\n\r\n    const columns: TableColumn[] = [\r\n      {type: 'index', width: '100px'},\r\n      {title: '歌曲', property: 'title', flex: true},\r\n      {title: '歌手', property: 'singer'},\r\n      {title: '专辑', property: 'album'},\r\n      {title: '时长', property: 'duration', width: '100px'}\r\n    ];\r\n\r\n    const multiple = ref(false);\r\n\r\n    const router = useRouter();\r\n\r\n    let $query: string = '';\r\n\r\n    /**\r\n     * 处理选项卡改变事件\r\n     *\r\n     * @param newTab 新选定的选项卡\r\n     */\r\n    const handleTabChanged = (newTab: Tab) => {\r\n      activeTabName.value = newTab.name;\r\n\r\n      // 若未选定任何一个选项卡 或 当前选项卡无需更新数据, 则什么也不做\r\n      if (!newTab.update) {\r\n        return;\r\n      }\r\n\r\n      // 打开进度指示器\r\n      Spinner.open();\r\n\r\n      // 立刻重置为无需更新状态\r\n      newTab.update = false;\r\n\r\n      // 分页信息\r\n      const page = newTab.page as ComputedPage;\r\n\r\n      // 若选定歌曲选项卡\r\n      if (newTab.name === SONG_TAB.name) {\r\n        // 搜索歌手 => 处理并展示歌手基本数据 => 歌曲搜索 => 显示歌曲数据 => 关闭进度指示器\r\n        searchSinger($query).then(data => {\r\n          const [singerInfo] = data.list || [];\r\n          singerInfo && Object.assign(singer, singerInfo);\r\n\r\n          return searchSong(page, $query);\r\n\r\n        }).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加歌曲\r\n          songList.splice(0, songList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n\r\n      } else if (newTab.name === ALBUM_TAB.name) {\r\n        Spinner.open();\r\n\r\n        searchAlbum(page, $query).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加专辑\r\n          albumList.splice(0, albumList.length, ...data.list);\r\n\r\n        }).finally(Spinner.close);\r\n\r\n      } else if (newTab.name === MV_TAB.name) {\r\n        searchMv(page, $query).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n\r\n          // 添加Mv\r\n          mvList.splice(0, mvList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n\r\n      } else if (newTab.name === SPECIAL_TAB.name) {\r\n        searchSpecial(page, $query).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n\r\n          // 添加歌单\r\n          specialList.splice(0, specialList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n    };\r\n\r\n    watch(() => props.query, newQuery => {\r\n      // 若不相等 且 新的查询参数是有效的(不能null或undefined)\r\n      if (newQuery.value && $query !== newQuery.value) {\r\n        $query = newQuery.value;\r\n        tabs.forEach(tab => {\r\n          tab.update = true;\r\n          // 清除分页数据\r\n          tab.page.total = 0;\r\n          tab.page.current = 1;\r\n          tab.page.pageCount = 0;\r\n        });\r\n\r\n        handleTabChanged(SONG_TAB);\r\n      }\r\n    }, {immediate: true});\r\n\r\n    return {\r\n      tabs, activeTabName, singer, columns, songList, albumList, mvList, specialList, multiple,\r\n\r\n      handleTabChanged,\r\n\r\n      playMediaList,\r\n\r\n      /**\r\n       * 当专辑列表项点击时,跳转到专辑视图\r\n       *\r\n       * @param event 点击事件\r\n       */\r\n      onAlbumItemClicked(event: PointerEvent) {\r\n        const node = event.target as HTMLElement, classList = node.classList;\r\n        if (classList.contains('cover') || classList.contains('name')) {\r\n          // 获取数据索引\r\n          const value = (node.parentNode as HTMLElement).getAttribute('data-index');\r\n          const index = value ? Number(value) : -1;\r\n          // 提取专辑信息\r\n          const album = albumList[index] && {...albumList[index], singer: null};\r\n          // 若存在专辑信息, 则跳转到专辑视图\r\n          album && router.push({path: '/album-view', query: album});\r\n        }\r\n      },\r\n\r\n      loadDataList() {\r\n        const page = SONG_TAB.page;\r\n\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          ++page.current;\r\n          Spinner.open();\r\n\r\n          searchSong(page, $query).then(data => {\r\n            // 重设置分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加歌曲\r\n            songList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadAlbumData() {\r\n        const page = MV_TAB.page;\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          searchAlbum(page, $query).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加专辑\r\n            albumList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadMvData() {\r\n        const page = MV_TAB.page;\r\n\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          searchMv(page, $query).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n\r\n            // 添加Mv\r\n            mvList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadSpecialData() {\r\n        const page = SPECIAL_TAB.page;\r\n\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          searchSpecial(page, $query).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n\r\n            // 添加歌单\r\n            specialList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      }\r\n\r\n    };\r\n  }\r\n\r\n});\r\n","import { render } from \"./NetSearchView.vue?vue&type=template&id=5aca646d&ts=true\"\nimport script from \"./NetSearchView.vue?vue&type=script&lang=ts\"\nexport * from \"./NetSearchView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\SCMQ\\\\project\\\\HTML\\\\mq-player-vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}