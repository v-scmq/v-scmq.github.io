{"version":3,"sources":["webpack:///./src/renderer/views/SingerView.vue?6f89","webpack:///./src/renderer/views/SingerView.vue?fcdc","webpack:///./src/renderer/views/SingerView.vue"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","style","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","render","_ctx","_cache","$props","$setup","$data","$options","_component_image_view","_component_Button","_component_icon","_component_table_view","_component_grid_view","modelValue","singer","cover","$event","defaultValue","name","songCount","albumCount","mvCount","fansCount","text","prefixIcon","prefixIconSize","multiple","tabMap","tabList","item","index","active","value","key","onClick","title","columns","data","songList","onRowDblclick","playMediaList","onInfiniteScroll","loadDataList","vip","width","height","vid","singers","mid","album","_","SONG_TAB","albumList","loadAlbumData","onCellClick","onAlbumItemClicked","default","ALBUM_TAB","mvList","loadMvData","MV_TAB","introduce","DETAIL_TAB","props","query","type","Object","required","update","page","current","size","property","flex","router","handleTabChanged","newTab","Spinner","open","then","assign","splice","length","list","catch","finally","close","forEach","tab","total","pageCount","immediate","push","path","__exports__"],"mappings":"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","file":"public/js/chunk-2d0d6e74.67b6148a.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withCtx as _withCtx, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"v-row data-container\" }\nconst _hoisted_2 = { class: \"v-column\" }\nconst _hoisted_3 = { class: \"v-row data-statistic\" }\nconst _hoisted_4 = { class: \"statistic-item\" }\nconst _hoisted_5 = { class: \"statistic-item\" }\nconst _hoisted_6 = { class: \"statistic-item\" }\nconst _hoisted_7 = { class: \"statistic-item\" }\nconst _hoisted_8 = { class: \"v-row\" }\nconst _hoisted_9 = { class: \"tab-pane v-column\" }\nconst _hoisted_10 = {\n  class: \"v-row tab-container\",\n  style: {\"justify-content\":\"center\"}\n}\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = { class: \"tab-content v-column\" }\nconst _hoisted_13 = { class: \"cell-text\" }\nconst _hoisted_14 = [\"data-mid\"]\nconst _hoisted_15 = [\"data-mid\"]\nconst _hoisted_16 = { class: \"name\" }\nconst _hoisted_17 = [\"data-mid\"]\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\" -\")\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_image_view = _resolveComponent(\"image-view\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_icon = _resolveComponent(\"icon\")!\n  const _component_table_view = _resolveComponent(\"table-view\")!\n  const _component_grid_view = _resolveComponent(\"grid-view\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_image_view, {\n        modelValue: _ctx.singer.cover,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.singer.cover) = $event)),\n        defaultValue: \"icon/singer.png\"\n      }, null, 8, [\"modelValue\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", null, _toDisplayString(_ctx.singer.name || '-'), 1),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"span\", _hoisted_4, \"单曲：\" + _toDisplayString(_ctx.singer.songCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_5, \"专辑：\" + _toDisplayString(_ctx.singer.albumCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_6, \"MV：\" + _toDisplayString(_ctx.singer.mvCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_7, \"粉丝：\" + _toDisplayString(_ctx.singer.fansCount || '-'), 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createVNode(_component_Button, {\n            text: \"播放全部\",\n            prefixIcon: \"play-select\",\n            prefixIconSize: \"1.5em\"\n          }),\n          _createVNode(_component_Button, {\n            text: \"添加到\",\n            prefixIcon: \"plus\",\n            prefixIconSize: \"1.5em\"\n          }),\n          _createVNode(_component_Button, {\n            text: \"下载\",\n            prefixIcon: \"my-download\",\n            prefixIconSize: \"1.5em\"\n          }),\n          _createVNode(_component_Button, {\n            text: \"删除\",\n            prefixIcon: \"trash\",\n            prefixIconSize: \"1.5em\"\n          }),\n          _createVNode(_component_Button, {\n            text: _ctx.multiple ? '退出批量操作':'批量操作',\n            prefixIcon: \"multiple\",\n            prefixIconSize: \"1.5em\"\n          }, null, 8, [\"text\"])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"div\", _hoisted_10, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tabMap.tabList, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: _normalizeClass([\"tab\", {active: _ctx.tabMap.value === item}]),\n            key: index,\n            onClick: ($event: any) => (_ctx.tabMap.value = item)\n          }, _toDisplayString(item.title), 11, _hoisted_11))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", _hoisted_12, [\n        _withDirectives(_createVNode(_component_table_view, {\n          style: {\"flex\":\"auto\"},\n          columns: _ctx.columns,\n          data: _ctx.songList,\n          onRowDblclick: _ctx.playMediaList,\n          onInfiniteScroll: _ctx.loadDataList\n        }, {\n          title: _withCtx(({item}) => [\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.title), 1),\n            (item.vip)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 0,\n                  class: \"vip-icon\",\n                  name: \"vip\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true),\n            (item.vid)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 1,\n                  class: \"mv-icon\",\n                  name: \"mv\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          singer: _withCtx(({item:{singer:singers = []}}) => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(singers, (singer, index) => {\n              return (_openBlock(), _createElementBlock(\"span\", {\n                class: \"link cell-text\",\n                key: index,\n                \"data-mid\": singer.mid\n              }, _toDisplayString(singer.name), 9, _hoisted_14))\n            }), 128))\n          ]),\n          album: _withCtx(({item:{album}}) => [\n            album\n              ? (_openBlock(), _createElementBlock(\"span\", {\n                  key: 0,\n                  class: \"link cell-text\",\n                  \"data-mid\": album.mid\n                }, _toDisplayString(album.name), 9, _hoisted_15))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }, 8, [\"columns\", \"data\", \"onRowDblclick\", \"onInfiniteScroll\"]), [\n          [_vShow, _ctx.tabMap.value===_ctx.tabMap.SONG_TAB]\n        ]),\n        _withDirectives(_createVNode(_component_grid_view, {\n          \"cell-widths\": \"repeat(auto-fit, 13em)\",\n          data: _ctx.albumList,\n          onInfiniteScroll: _ctx.loadAlbumData,\n          \"cell-height\": 234,\n          onCellClick: _ctx.onAlbumItemClicked\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/album.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", _hoisted_16, _toDisplayString(item.name), 1)\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\", \"onCellClick\"]), [\n          [_vShow, _ctx.tabMap.value===_ctx.tabMap.ALBUM_TAB]\n        ]),\n        _withDirectives(_createVNode(_component_grid_view, {\n          class: \"arc-rect\",\n          \"cell-widths\": \"repeat(auto-fit, 16em)\",\n          data: _ctx.mvList,\n          \"cell-height\": 206,\n          onInfiniteScroll: _ctx.loadMvData\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/mv.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.singer, (singer, index) => {\n                return (_openBlock(), _createElementBlock(\"span\", {\n                  class: \"link\",\n                  key: index,\n                  \"data-mid\": singer.mid\n                }, _toDisplayString(singer.name), 9, _hoisted_17))\n              }), 128)),\n              _hoisted_18,\n              _createElementVNode(\"span\", null, _toDisplayString(item.title), 1)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\"]), [\n          [_vShow, _ctx.tabMap.value===_ctx.tabMap.MV_TAB]\n        ]),\n        _withDirectives(_createElementVNode(\"div\", { class: \"label\" }, _toDisplayString(_ctx.singer.introduce), 513), [\n          [_vShow, _ctx.tabMap.value===_ctx.tabMap.DETAIL_TAB]\n        ])\n      ])\n    ])\n  ], 64))\n}","\r\nimport Spinner from '../components/Spinner';\r\nimport {playMediaList} from '../player/hooks';\r\nimport {getSingerAlbumList, getSingerMvList, getSingerSongList} from '../api';\r\n\r\nimport {Album, Mv, Singer, Song, ComputedPage} from '../../types';\r\nimport {TableColumn} from '../components/types';\r\n\r\nimport {reactive, watch, PropType, defineComponent, ref} from 'vue';\r\nimport {useRouter} from 'vue-router';\r\n\r\n/**\r\n * 选项卡信息\r\n */\r\ntype Tab = {\r\n  /** 选项卡标题 */\r\n  title: string;\r\n  /** 数据是否需要更新 */\r\n  update: boolean;\r\n  /** 选项卡对应的视图是分页信息 */\r\n  page?: ComputedPage;\r\n};\r\n\r\nexport default defineComponent({\r\n  name: 'SingerView',\r\n\r\n  props: {\r\n    query: {type: Object as PropType<Singer>, required: true}\r\n  },\r\n\r\n  setup(props) {\r\n    const singer = reactive<Singer>({});\r\n    const songList = reactive<Song[]>([]);\r\n    const albumList = reactive<Album[]>([]);\r\n    const mvList = reactive<Mv[]>([]);\r\n\r\n    const SONG_TAB: Tab = {title: '歌曲', update: true, page: {current: 1, size: 30} as ComputedPage};\r\n    const ALBUM_TAB: Tab = {title: '专辑', update: true, page: {current: 1, size: 30} as ComputedPage};\r\n    const MV_TAB: Tab = {title: 'MV', update: true, page: {current: 1, size: 30} as ComputedPage};\r\n    const DETAIL_TAB: Tab = {title: '详情', update: true};\r\n    const tabList = [SONG_TAB, ALBUM_TAB, MV_TAB, DETAIL_TAB];\r\n    const tabMap = reactive({value: SONG_TAB, tabList, SONG_TAB, ALBUM_TAB, MV_TAB, DETAIL_TAB});\r\n\r\n    const columns = reactive<TableColumn[]>([\r\n      {type: 'index', width: '100px'},\r\n      {title: '歌曲', property: 'title', flex: true},\r\n      {title: '歌手', property: 'singer'},\r\n      {title: '专辑', property: 'album'},\r\n      {title: '时长', property: 'duration', width: '100px'}\r\n    ]);\r\n\r\n    const multiple = ref(false);\r\n\r\n    const router = useRouter();\r\n\r\n    /**\r\n     * 处理选项卡改变事件\r\n     *\r\n     * @param newTab 新选定的选项卡\r\n     */\r\n    const handleTabChanged = (newTab: Tab) => {\r\n      // 若未选定任何一个选项卡 或 当前选项卡无需更新数据, 则什么也不做\r\n      if (!newTab || !newTab.update) return;\r\n      // 立刻重置为无需更新状态\r\n      newTab.update = false;\r\n\r\n      // 分页信息\r\n      const page = newTab.page as ComputedPage;\r\n\r\n      if (newTab === tabMap.SONG_TAB) {\r\n        Spinner.open();\r\n        getSingerSongList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 修改歌手信息\r\n          data.singer && Object.assign(singer, data.singer);\r\n          // 添加歌曲\r\n          songList.splice(0, songList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n\r\n      if (newTab === tabMap.ALBUM_TAB) {\r\n        Spinner.open();\r\n        getSingerAlbumList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加专辑\r\n          albumList.splice(0, albumList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n\r\n      if (newTab === tabMap.MV_TAB) {\r\n        Spinner.open();\r\n        getSingerMvList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加Mv\r\n          mvList.splice(0, mvList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n    };\r\n\r\n    // 监听查询参数改变\r\n    watch(() => props.query, (value: Singer) => {\r\n      if (singer.mid !== value.mid && value.mid) {\r\n        // 重设歌手信息\r\n        Object.assign(singer, value);\r\n\r\n        tabMap.tabList.forEach(tab => {\r\n          tab.update = true;\r\n          if (tab.page) {\r\n            // 清除分页数据\r\n            tab.page.total = 0;\r\n            tab.page.current = 1;\r\n            tab.page.pageCount = 0;\r\n          }\r\n        });\r\n\r\n        // 若当前是歌曲选项卡,则手动调用handleChange方法处理\r\n        if (tabMap.value === tabMap.SONG_TAB) {\r\n          handleTabChanged(tabMap.SONG_TAB);\r\n        } else {\r\n          // 否则通过改变选项卡 触发handleChange方法\r\n          tabMap.value = tabMap.SONG_TAB;\r\n        }\r\n      }\r\n    }, {immediate: true});\r\n\r\n    // 监听选项卡选择改变\r\n    watch(() => tabMap.value, handleTabChanged);\r\n\r\n    return {\r\n      tabMap, singer, columns, songList, albumList, mvList, multiple,\r\n\r\n      playMediaList,\r\n\r\n      /**\r\n       * 当专辑列表项点击时,跳转到专辑视图\r\n       *\r\n       * @param {Album} album 专辑信息\r\n       */\r\n      onAlbumItemClicked(album: Album) {\r\n        // 若存在专辑信息, 则跳转到专辑视图\r\n        album && router.push({path: '/album-view', query: {...album, singer: null}});\r\n      },\r\n\r\n      /** 加载歌曲数据到表格视图中 */\r\n      loadDataList() {\r\n        const page = tabMap.SONG_TAB.page as ComputedPage;\r\n\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          ++page.current;\r\n          Spinner.open();\r\n\r\n          getSingerSongList(page, singer).then(data => {\r\n            // 重设置分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加歌曲\r\n            songList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadAlbumData() {\r\n        const page = tabMap.MV_TAB.page as ComputedPage;\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          getSingerAlbumList(page, singer).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加专辑\r\n            albumList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadMvData() {\r\n        const page = tabMap.MV_TAB.page as ComputedPage;\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          getSingerMvList(page, singer).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加Mv\r\n            mvList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      }\r\n\r\n    };\r\n  }\r\n});\r\n","import { render } from \"./SingerView.vue?vue&type=template&id=da83da9c&ts=true\"\nimport script from \"./SingerView.vue?vue&type=script&lang=ts\"\nexport * from \"./SingerView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\SCMQ\\\\Project\\\\mq-player-vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}