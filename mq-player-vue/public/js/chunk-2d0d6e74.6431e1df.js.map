{"version":3,"sources":["webpack:///./src/renderer/views/SingerView.vue?9175","webpack:///./src/renderer/views/SingerView.vue?fcdc","webpack:///./src/renderer/views/SingerView.vue"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","style","_hoisted_9","_createTextVNode","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","render","_ctx","_cache","$props","$setup","$data","$options","_component_image_view","_resolveComponent","_component_hl_button","_component_icon","_component_table_view","_component_grid_view","_component_tab_pane","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_createVNode","modelValue","singer","cover","$event","defaultValue","_toDisplayString","name","songCount","albumCount","mvCount","fansCount","icon","default","_withCtx","_","onClick","multiple","tabs","activeTabName","onTabChange","handleTabChanged","song","selection","columns","data","songList","onRowDblclick","playMediaList","onInfiniteScroll","loadDataList","title","item","vip","_createBlock","key","width","height","_createCommentVNode","vid","singers","_renderList","index","mid","album","albumList","loadAlbumData","onCellClick","onAlbumItemClicked","mv","mvList","loadMvData","introduce","defineComponent","props","query","type","Object","required","setup","reactive","SONG_TAB","update","page","current","size","ALBUM_TAB","MV_TAB","DETAIL_TAB","ref","property","flex","router","useRouter","newTab","value","Spinner","open","getSingerSongList","then","assign","splice","length","list","catch","finally","close","getSingerAlbumList","getSingerMvList","watch","forEach","tab","total","pageCount","immediate","push","path","__exports__"],"mappings":"uIAEA,MAAMA,EAAa,CAAEC,MAAO,wBACtBC,EAAa,CAAED,MAAO,YACtBE,EAAa,CAAEF,MAAO,wBACtBG,EAAa,CAAEH,MAAO,kBACtBI,EAAa,CAAEJ,MAAO,kBACtBK,EAAa,CAAEL,MAAO,kBACtBM,EAAa,CAAEN,MAAO,kBACtBO,EAAa,CACjBP,MAAO,QACPQ,MAAO,CAAC,qBAAqB,UAEzBC,EAA0BC,eAAiB,QAC3CC,EAA2BD,eAAiB,OAC5CE,EAA2BF,eAAiB,MAC5CG,EAA2BH,eAAiB,MAC5CI,EAAc,CAAEd,MAAO,aACvBe,EAAc,CAAC,YACfC,EAAc,CAAC,YACfC,EAAc,CAAEjB,MAAO,QACvBkB,EAAc,CAAC,YACfC,EAA2BT,eAAiB,MAC5CU,EAAc,CAAEpB,MAAO,SAEvB,SAAUqB,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,EAAwBC,eAAkB,cAC1CC,EAAuBD,eAAkB,aACzCE,EAAkBF,eAAkB,QACpCG,EAAwBH,eAAkB,cAC1CI,EAAuBJ,eAAkB,aACzCK,EAAsBL,eAAkB,YAE9C,OAAQM,iBAAcC,eAAoBC,OAAW,KAAM,CACzDC,eAAoB,MAAOvC,EAAY,CACrCwC,eAAaX,EAAuB,CAClCY,WAAYlB,EAAKmB,OAAOC,MACxB,sBAAuBnB,EAAO,KAAOA,EAAO,GAAMoB,GAAkBrB,EAAKmB,OAAOC,MAASC,GACzFC,aAAc,mBACb,KAAM,EAAG,CAAC,eACbN,eAAoB,MAAOrC,EAAY,CACrCqC,eAAoB,MAAO,KAAMO,eAAiBvB,EAAKmB,OAAOK,MAAQ,KAAM,GAC5ER,eAAoB,MAAOpC,EAAY,CACrCoC,eAAoB,OAAQnC,EAAY,MAAQ0C,eAAiBvB,EAAKmB,OAAOM,WAAa,KAAM,GAChGT,eAAoB,OAAQlC,EAAY,MAAQyC,eAAiBvB,EAAKmB,OAAOO,YAAc,KAAM,GACjGV,eAAoB,OAAQjC,EAAY,MAAQwC,eAAiBvB,EAAKmB,OAAOQ,SAAW,KAAM,GAC9FX,eAAoB,OAAQhC,EAAY,MAAQuC,eAAiBvB,EAAKmB,OAAOS,WAAa,KAAM,KAElGZ,eAAoB,MAAO/B,EAAY,CACrCgC,eAAaT,EAAsB,CAAEqB,KAAM,eAAiB,CAC1DC,QAASC,eAAS,IAAM,CACtB5C,IAEF6C,EAAG,IAELf,eAAaT,EAAsB,CAAEqB,KAAM,QAAU,CACnDC,QAASC,eAAS,IAAM,CACtB1C,IAEF2C,EAAG,IAELf,eAAaT,EAAsB,CAAEqB,KAAM,eAAiB,CAC1DC,QAASC,eAAS,IAAM,CACtBzC,IAEF0C,EAAG,IAELf,eAAaT,EAAsB,CAAEqB,KAAM,SAAW,CACpDC,QAASC,eAAS,IAAM,CACtBxC,IAEFyC,EAAG,IAELf,eAAaT,EAAsB,CACjCqB,KAAM,WACNI,QAAShC,EAAO,KAAOA,EAAO,GAAMoB,GAAiBrB,EAAKkC,UAAYlC,EAAKkC,WAC1E,CACDJ,QAASC,eAAS,IAAM,CACtB3C,eAAiBmC,eAAiBvB,EAAKkC,SAAW,SAAW,QAAS,KAExEF,EAAG,UAKXf,eAAaL,EAAqB,CAChCuB,KAAMnC,EAAKmC,KACXC,cAAepC,EAAKoC,cACpBC,YAAarC,EAAKsC,kBACjB,CACDC,KAAMR,eAAS,IAAM,CACnBd,eAAaP,EAAuB,CAClCxB,MAAO,CAAC,KAAO,QACfsD,UAAWxC,EAAKkC,SAChBO,QAASzC,EAAKyC,QACdC,KAAM1C,EAAK2C,SACXC,cAAe5C,EAAK6C,cACpBC,iBAAkB9C,EAAK+C,cACtB,CACDC,MAAOjB,eAAS,EAAEkB,UAAU,CAC1BjC,eAAoB,OAAQxB,EAAa+B,eAAiB0B,EAAKD,OAAQ,GACtEC,EAAKC,KACDrC,iBAAcsC,eAAa1C,EAAiB,CAC3C2C,IAAK,EACL1E,MAAO,WACP8C,KAAM,MACN6B,MAAO,MACPC,OAAQ,SAEVC,eAAoB,IAAI,GAC3BN,EAAKO,KACD3C,iBAAcsC,eAAa1C,EAAiB,CAC3C2C,IAAK,EACL1E,MAAO,UACP8C,KAAM,KACN6B,MAAO,MACPC,OAAQ,SAEVC,eAAoB,IAAI,KAE9BpC,OAAQY,eAAS,EAAEkB,MAAM9B,OAAOsC,EAAU,OAAS,EAChD5C,gBAAW,GAAOC,eAAoBC,OAAW,KAAM2C,eAAYD,EAAS,CAACtC,EAAQwC,KAC5E9C,iBAAcC,eAAoB,OAAQ,CAChDpC,MAAO,iBACP0E,IAAKO,EACL,WAAYxC,EAAOyC,KAClBrC,eAAiBJ,EAAOK,MAAO,EAAG/B,KACnC,QAENoE,MAAO9B,eAAS,EAAEkB,MAAMY,YAAY,CAClCA,GACKhD,iBAAcC,eAAoB,OAAQ,CACzCsC,IAAK,EACL1E,MAAO,iBACP,WAAYmF,EAAMD,KACjBrC,eAAiBsC,EAAMrC,MAAO,EAAG9B,IACpC6D,eAAoB,IAAI,KAE9BvB,EAAG,GACF,EAAG,CAAC,YAAa,UAAW,OAAQ,gBAAiB,uBAE1D6B,MAAO9B,eAAS,IAAM,CACpBd,eAAaN,EAAsB,CACjC,cAAe,yBACf+B,KAAM1C,EAAK8D,UACXhB,iBAAkB9C,EAAK+D,cACvB,cAAe,IACfC,YAAahE,EAAKiE,oBACjB,CACDnC,QAASC,eAAS,EAAEkB,UAAU,CAC5BhC,eAAaX,EAAuB,CAClCY,WAAY+B,EAAK7B,MACjB,sBAAwBC,GAAkB4B,EAAK7B,MAASC,EACxDC,aAAc,kBACb,KAAM,EAAG,CAAC,aAAc,wBAC3BN,eAAoB,MAAOrB,EAAa4B,eAAiB0B,EAAKzB,MAAO,KAEvEQ,EAAG,GACF,EAAG,CAAC,OAAQ,mBAAoB,kBAErCkC,GAAInC,eAAS,IAAM,CACjBd,eAAaN,EAAsB,CACjCjC,MAAO,WACP,cAAe,yBACfgE,KAAM1C,EAAKmE,OACX,cAAe,IACfrB,iBAAkB9C,EAAKoE,YACtB,CACDtC,QAASC,eAAS,EAAEkB,UAAU,CAC5BhC,eAAaX,EAAuB,CAClCY,WAAY+B,EAAK7B,MACjB,sBAAwBC,GAAkB4B,EAAK7B,MAASC,EACxDC,aAAc,eACb,KAAM,EAAG,CAAC,aAAc,wBAC3BN,eAAoB,MAAO,KAAM,EAC9BH,gBAAW,GAAOC,eAAoBC,OAAW,KAAM2C,eAAYT,EAAK9B,OAAQ,CAACA,EAAQwC,KAChF9C,iBAAcC,eAAoB,OAAQ,CAChDpC,MAAO,OACP0E,IAAKO,EACL,WAAYxC,EAAOyC,KAClBrC,eAAiBJ,EAAOK,MAAO,EAAG5B,KACnC,MACJC,EACAmB,eAAoB,OAAQ,KAAMO,eAAiB0B,EAAKD,OAAQ,OAGpEhB,EAAG,GACF,EAAG,CAAC,OAAQ,uBAEjBqC,UAAWtC,eAAS,IAAM,CACxBf,eAAoB,MAAOlB,EAAayB,eAAiBvB,EAAKmB,OAAOkD,WAAY,KAEnFrC,EAAG,GACF,EAAG,CAAC,OAAQ,gBAAiB,iBAC/B,I,oDC3KUsC,iBAAgB,CAC7B9C,KAAM,aAEN+C,MAAO,CACLC,MAAO,CAACC,KAAMC,OAA4BC,UAAU,IAGtDC,MAAML,GACJ,MAAMpD,EAAS0D,eAAiB,IAC1BlC,EAAWkC,eAAiB,IAC5Bf,EAAYe,eAAkB,IAC9BV,EAASU,eAAe,IAExBC,EAAW,CAAC9B,MAAO,KAAMxB,KAAM,OAAQuD,QAAQ,EAAMC,KAAM,CAACC,QAAS,EAAGC,KAAM,KAC9EC,EAAY,CAACnC,MAAO,KAAMxB,KAAM,QAASuD,QAAQ,EAAMC,KAAM,CAACC,QAAS,EAAGC,KAAM,KAChFE,EAAS,CAACpC,MAAO,KAAMxB,KAAM,KAAMuD,QAAQ,EAAMC,KAAM,CAACC,QAAS,EAAGC,KAAM,KAC1EG,EAAa,CAACrC,MAAO,KAAMxB,KAAM,YAAauD,QAAQ,GAEtD5C,EAAO,CAAC2C,EAAUK,EAAWC,EAAQC,GACrCjD,EAAgBkD,eAAa,QAE7B7C,EAAyB,CAC7B,CAACgC,KAAM,QAASpB,MAAO,SACvB,CAACL,MAAO,KAAMuC,SAAU,QAASC,MAAM,GACvC,CAACxC,MAAO,KAAMuC,SAAU,UACxB,CAACvC,MAAO,KAAMuC,SAAU,SACxB,CAACvC,MAAO,KAAMuC,SAAU,WAAYlC,MAAO,UAGvCnB,EAAWoD,gBAAI,GAEfG,EAASC,iBAOTpD,EAAoBqD,IAIxB,GAHAvD,EAAcwD,MAAQD,EAAOnE,KAGT,cAAhBmE,EAAOnE,OAAyBmE,EAAOZ,OACzC,OAIFY,EAAOZ,QAAS,EAGhBc,OAAQC,OAGR,MAAMd,EAAOW,EAAOX,KAEA,SAAhBW,EAAOnE,MACTuE,eAAkBf,EAAM7D,GAAQ6E,KAAKtD,IAEnCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtCtC,EAAKvB,QAAUuD,OAAOuB,OAAO9E,EAAQuB,EAAKvB,QAE1CwB,EAASuD,OAAO,EAAGvD,EAASwD,UAAWzD,EAAK0D,QAE3CC,MAAM,IAAMV,EAAOZ,QAAS,GAAMuB,QAAQT,OAAQU,OAGnC,UAAhBZ,EAAOnE,MACTgF,eAAmBxB,EAAM7D,GAAQ6E,KAAKtD,IAEpCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtClB,EAAUoC,OAAO,EAAGpC,EAAUqC,UAAWzD,EAAK0D,QAE7CC,MAAM,IAAMV,EAAOZ,QAAS,GAAMuB,QAAQT,OAAQU,OAGnC,OAAhBZ,EAAOnE,MACTiF,eAAgBzB,EAAM7D,GAAQ6E,KAAKtD,IAEjCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtCb,EAAO+B,OAAO,EAAG/B,EAAOgC,UAAWzD,EAAK0D,QAEvCC,MAAM,IAAMV,EAAOZ,QAAS,GAAMuB,QAAQT,OAAQU,QAyBzD,OAnBAG,eAAM,IAAMnC,EAAMC,MAAQoB,IACpBzE,EAAOyC,MAAQgC,EAAMhC,KAAOgC,EAAMhC,MAEpCc,OAAOuB,OAAO9E,EAAQyE,GAEtBzD,EAAKwE,QAAQC,IACXA,EAAI7B,QAAS,EACT6B,EAAI5B,OAEN4B,EAAI5B,KAAK6B,MAAQ,EACjBD,EAAI5B,KAAKC,QAAU,EACnB2B,EAAI5B,KAAK8B,UAAY,KAIzBxE,EAAiBwC,KAElB,CAACiC,WAAW,IAER,CACL5E,OAAMC,gBAAejB,SAAQsB,UAASE,WAAUmB,YAAWK,SAAQjC,WAEnEI,mBAEAO,qBAOAoB,mBAAmBJ,GAEjBA,GAAS4B,EAAOuB,KAAK,CAACC,KAAM,cAAezC,MAAO,IAAIX,EAAO1C,OAAQ,SAIvE4B,eACE,MAAMiC,EAAOF,EAASE,KAGlBA,EAAKC,SAAW,GAAKD,EAAKC,QAAUD,EAAK8B,cACzC9B,EAAKC,QACPY,OAAQC,OAERC,eAAkBf,EAAM7D,GAAQ6E,KAAKtD,IAEnCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtCrC,EAASqE,QAAQtE,EAAK0D,QAErBC,MAAM,MAAQrB,EAAKC,SAASqB,QAAQT,OAAQU,SAKnDxC,gBACE,MAAMiB,EAAOI,EAAOJ,KAEhBA,EAAKC,SAAW,GAAKD,EAAKC,QAAUD,EAAK8B,YAC3CjB,OAAQC,SAENd,EAAKC,QAEPuB,eAAmBxB,EAAM7D,GAAQ6E,KAAKtD,IAEpCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtClB,EAAUkD,QAAQtE,EAAK0D,QAEtBC,MAAM,MAAQrB,EAAKC,SAASqB,QAAQT,OAAQU,SAKnDnC,aACE,MAAMY,EAAOI,EAAOJ,KAEhBA,EAAKC,SAAW,GAAKD,EAAKC,QAAUD,EAAK8B,YAC3CjB,OAAQC,SAENd,EAAKC,QAEPwB,eAAgBzB,EAAM7D,GAAQ6E,KAAKtD,IAEjCA,EAAKsC,MAAQN,OAAOuB,OAAOjB,EAAMtC,EAAKsC,MAEtCb,EAAO6C,QAAQtE,EAAK0D,QAEnBC,MAAM,MAAQrB,EAAKC,SAASqB,QAAQT,OAAQU,a,qBCrMzD,MAAMW,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnH,KAErD","file":"public/js/chunk-2d0d6e74.6431e1df.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"v-row data-container\" }\nconst _hoisted_2 = { class: \"v-column\" }\nconst _hoisted_3 = { class: \"v-row data-statistic\" }\nconst _hoisted_4 = { class: \"statistic-item\" }\nconst _hoisted_5 = { class: \"statistic-item\" }\nconst _hoisted_6 = { class: \"statistic-item\" }\nconst _hoisted_7 = { class: \"statistic-item\" }\nconst _hoisted_8 = {\n  class: \"v-row\",\n  style: {\"--button-icon-size\":\"1.5em\"}\n}\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"播放全部\")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"添加到\")\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"下载\")\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\"删除\")\nconst _hoisted_13 = { class: \"cell-text\" }\nconst _hoisted_14 = [\"data-mid\"]\nconst _hoisted_15 = [\"data-mid\"]\nconst _hoisted_16 = { class: \"name\" }\nconst _hoisted_17 = [\"data-mid\"]\nconst _hoisted_18 = /*#__PURE__*/_createTextVNode(\" -\")\nconst _hoisted_19 = { class: \"label\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_image_view = _resolveComponent(\"image-view\")!\n  const _component_hl_button = _resolveComponent(\"hl-button\")!\n  const _component_icon = _resolveComponent(\"icon\")!\n  const _component_table_view = _resolveComponent(\"table-view\")!\n  const _component_grid_view = _resolveComponent(\"grid-view\")!\n  const _component_tab_pane = _resolveComponent(\"tab-pane\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(_component_image_view, {\n        modelValue: _ctx.singer.cover,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.singer.cover) = $event)),\n        defaultValue: \"icon/singer.png\"\n      }, null, 8, [\"modelValue\"]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", null, _toDisplayString(_ctx.singer.name || '-'), 1),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"span\", _hoisted_4, \"单曲：\" + _toDisplayString(_ctx.singer.songCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_5, \"专辑：\" + _toDisplayString(_ctx.singer.albumCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_6, \"MV：\" + _toDisplayString(_ctx.singer.mvCount || '-'), 1),\n          _createElementVNode(\"span\", _hoisted_7, \"粉丝：\" + _toDisplayString(_ctx.singer.fansCount || '-'), 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_8, [\n          _createVNode(_component_hl_button, { icon: \"play-select\" }, {\n            default: _withCtx(() => [\n              _hoisted_9\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_hl_button, { icon: \"plus\" }, {\n            default: _withCtx(() => [\n              _hoisted_10\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_hl_button, { icon: \"my-download\" }, {\n            default: _withCtx(() => [\n              _hoisted_11\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_hl_button, { icon: \"trash\" }, {\n            default: _withCtx(() => [\n              _hoisted_12\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_hl_button, {\n            icon: \"multiple\",\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.multiple = !_ctx.multiple))\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.multiple ? '退出批量操作' : '批量操作'), 1)\n            ]),\n            _: 1\n          })\n        ])\n      ])\n    ]),\n    _createVNode(_component_tab_pane, {\n      tabs: _ctx.tabs,\n      activeTabName: _ctx.activeTabName,\n      onTabChange: _ctx.handleTabChanged\n    }, {\n      song: _withCtx(() => [\n        _createVNode(_component_table_view, {\n          style: {\"flex\":\"auto\"},\n          selection: _ctx.multiple,\n          columns: _ctx.columns,\n          data: _ctx.songList,\n          onRowDblclick: _ctx.playMediaList,\n          onInfiniteScroll: _ctx.loadDataList\n        }, {\n          title: _withCtx(({item}) => [\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.title), 1),\n            (item.vip)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 0,\n                  class: \"vip-icon\",\n                  name: \"vip\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true),\n            (item.vid)\n              ? (_openBlock(), _createBlock(_component_icon, {\n                  key: 1,\n                  class: \"mv-icon\",\n                  name: \"mv\",\n                  width: \"1em\",\n                  height: \"1em\"\n                }))\n              : _createCommentVNode(\"\", true)\n          ]),\n          singer: _withCtx(({item:{singer:singers = []}}) => [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(singers, (singer, index) => {\n              return (_openBlock(), _createElementBlock(\"span\", {\n                class: \"link cell-text\",\n                key: index,\n                \"data-mid\": singer.mid\n              }, _toDisplayString(singer.name), 9, _hoisted_14))\n            }), 128))\n          ]),\n          album: _withCtx(({item:{album}}) => [\n            album\n              ? (_openBlock(), _createElementBlock(\"span\", {\n                  key: 0,\n                  class: \"link cell-text\",\n                  \"data-mid\": album.mid\n                }, _toDisplayString(album.name), 9, _hoisted_15))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        }, 8, [\"selection\", \"columns\", \"data\", \"onRowDblclick\", \"onInfiniteScroll\"])\n      ]),\n      album: _withCtx(() => [\n        _createVNode(_component_grid_view, {\n          \"cell-widths\": \"repeat(auto-fit, 13em)\",\n          data: _ctx.albumList,\n          onInfiniteScroll: _ctx.loadAlbumData,\n          \"cell-height\": 234,\n          onCellClick: _ctx.onAlbumItemClicked\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/album.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", _hoisted_16, _toDisplayString(item.name), 1)\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\", \"onCellClick\"])\n      ]),\n      mv: _withCtx(() => [\n        _createVNode(_component_grid_view, {\n          class: \"arc-rect\",\n          \"cell-widths\": \"repeat(auto-fit, 16em)\",\n          data: _ctx.mvList,\n          \"cell-height\": 206,\n          onInfiniteScroll: _ctx.loadMvData\n        }, {\n          default: _withCtx(({item}) => [\n            _createVNode(_component_image_view, {\n              modelValue: item.cover,\n              \"onUpdate:modelValue\": ($event: any) => ((item.cover) = $event),\n              defaultValue: \"icon/mv.png\"\n            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"]),\n            _createElementVNode(\"div\", null, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.singer, (singer, index) => {\n                return (_openBlock(), _createElementBlock(\"span\", {\n                  class: \"link\",\n                  key: index,\n                  \"data-mid\": singer.mid\n                }, _toDisplayString(singer.name), 9, _hoisted_17))\n              }), 128)),\n              _hoisted_18,\n              _createElementVNode(\"span\", null, _toDisplayString(item.title), 1)\n            ])\n          ]),\n          _: 1\n        }, 8, [\"data\", \"onInfiniteScroll\"])\n      ]),\n      introduce: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_19, _toDisplayString(_ctx.singer.introduce), 1)\n      ]),\n      _: 1\n    }, 8, [\"tabs\", \"activeTabName\", \"onTabChange\"])\n  ], 64))\n}","\r\nimport Spinner from '../components/Spinner';\r\nimport {playMediaList} from '../player/hooks';\r\nimport {getSingerAlbumList, getSingerMvList, getSingerSongList} from '../api';\r\n\r\nimport {Album, Mv, Singer, Song, ComputedPage} from '../../types';\r\nimport {TableColumn, Tab as BaseTab} from '../components/types';\r\n\r\nimport {reactive, watch, PropType, defineComponent, ref} from 'vue';\r\nimport {useRouter} from 'vue-router';\r\n\r\ntype TabName = 'song' | 'album' | 'mv' | 'introduce';\r\n/**\r\n * 选项卡信息\r\n */\r\ntype Tab = BaseTab & {\r\n  /** 数据是否需要更新 */\r\n  update: boolean;\r\n  name: TabName;\r\n  /** 选项卡对应的视图是分页信息 */\r\n  page?: ComputedPage;\r\n};\r\n\r\nexport default defineComponent({\r\n  name: 'SingerView',\r\n\r\n  props: {\r\n    query: {type: Object as PropType<Singer>, required: true}\r\n  },\r\n\r\n  setup(props) {\r\n    const singer = reactive<Singer>({});\r\n    const songList = reactive<Song[]>([]);\r\n    const albumList = reactive<Album[]>([]);\r\n    const mvList = reactive<Mv[]>([]);\r\n\r\n    const SONG_TAB = {title: '歌曲', name: 'song', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const ALBUM_TAB = {title: '专辑', name: 'album', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const MV_TAB = {title: 'MV', name: 'mv', update: true, page: {current: 1, size: 30}} as Tab;\r\n    const DETAIL_TAB = {title: '详情', name: 'introduce', update: true} as Tab;\r\n\r\n    const tabs = [SONG_TAB, ALBUM_TAB, MV_TAB, DETAIL_TAB];\r\n    const activeTabName = ref<TabName>('song');\r\n\r\n    const columns: TableColumn[] = [\r\n      {type: 'index', width: '100px'},\r\n      {title: '歌曲', property: 'title', flex: true},\r\n      {title: '歌手', property: 'singer'},\r\n      {title: '专辑', property: 'album'},\r\n      {title: '时长', property: 'duration', width: '100px'}\r\n    ];\r\n\r\n    const multiple = ref(false);\r\n\r\n    const router = useRouter();\r\n\r\n    /**\r\n     * 处理选项卡改变事件\r\n     *\r\n     * @param newTab 新选定的选项卡\r\n     */\r\n    const handleTabChanged = (newTab: Tab) => {\r\n      activeTabName.value = newTab.name;\r\n\r\n      // 若当前选项卡无需更新数据, 则什么也不做\r\n      if (newTab.name === 'introduce' || !newTab.update) {\r\n        return;\r\n      }\r\n\r\n      // 立刻重置为无需更新状态\r\n      newTab.update = false;\r\n\r\n      // 打开进度指示器\r\n      Spinner.open();\r\n\r\n      // 分页信息\r\n      const page = newTab.page as ComputedPage;\r\n\r\n      if (newTab.name === 'song') {\r\n        getSingerSongList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 修改歌手信息\r\n          data.singer && Object.assign(singer, data.singer);\r\n          // 添加歌曲\r\n          songList.splice(0, songList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n\r\n      if (newTab.name === 'album') {\r\n        getSingerAlbumList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加专辑\r\n          albumList.splice(0, albumList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n\r\n      if (newTab.name === 'mv') {\r\n        getSingerMvList(page, singer).then(data => {\r\n          // 修改分页信息\r\n          data.page && Object.assign(page, data.page);\r\n          // 添加Mv\r\n          mvList.splice(0, mvList.length, ...data.list);\r\n\r\n        }).catch(() => newTab.update = true).finally(Spinner.close);\r\n      }\r\n\r\n    };\r\n\r\n    // 监听查询参数改变\r\n    watch(() => props.query, (value: Singer) => {\r\n      if (singer.mid !== value.mid && value.mid) {\r\n        // 重设歌手信息\r\n        Object.assign(singer, value);\r\n\r\n        tabs.forEach(tab => {\r\n          tab.update = true;\r\n          if (tab.page) {\r\n            // 清除分页数据\r\n            tab.page.total = 0;\r\n            tab.page.current = 1;\r\n            tab.page.pageCount = 0;\r\n          }\r\n        });\r\n\r\n        handleTabChanged(SONG_TAB);\r\n      }\r\n    }, {immediate: true});\r\n\r\n    return {\r\n      tabs, activeTabName, singer, columns, songList, albumList, mvList, multiple,\r\n\r\n      handleTabChanged,\r\n\r\n      playMediaList,\r\n\r\n      /**\r\n       * 当专辑列表项点击时,跳转到专辑视图\r\n       *\r\n       * @param {Album} album 专辑信息\r\n       */\r\n      onAlbumItemClicked(album: Album) {\r\n        // 若存在专辑信息, 则跳转到专辑视图\r\n        album && router.push({path: '/album-view', query: {...album, singer: null}});\r\n      },\r\n\r\n      /** 加载歌曲数据到表格视图中 */\r\n      loadDataList() {\r\n        const page = SONG_TAB.page as ComputedPage;\r\n\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          ++page.current;\r\n          Spinner.open();\r\n\r\n          getSingerSongList(page, singer).then(data => {\r\n            // 重设置分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加歌曲\r\n            songList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadAlbumData() {\r\n        const page = MV_TAB.page as ComputedPage;\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          getSingerAlbumList(page, singer).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加专辑\r\n            albumList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      },\r\n\r\n      /** 加载数据到视图上(无限滚动触发点) */\r\n      loadMvData() {\r\n        const page = MV_TAB.page as ComputedPage;\r\n        // 若还有数据, 则发起网络请求加载歌曲数据列表\r\n        if (page.current >= 1 && page.current < page.pageCount) {\r\n          Spinner.open();\r\n\r\n          ++page.current;\r\n\r\n          getSingerMvList(page, singer).then(data => {\r\n            // 修改分页信息\r\n            data.page && Object.assign(page, data.page);\r\n            // 添加Mv\r\n            mvList.push(...data.list);\r\n\r\n          }).catch(() => --page.current).finally(Spinner.close);\r\n        }\r\n      }\r\n\r\n    };\r\n  }\r\n});\r\n","import { render } from \"./SingerView.vue?vue&type=template&id=7bbb287d&ts=true\"\nimport script from \"./SingerView.vue?vue&type=script&lang=ts\"\nexport * from \"./SingerView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"D:\\\\SCMQ\\\\project\\\\HTML\\\\mq-player-vue\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}